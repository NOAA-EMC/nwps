#!/bin/bash
# ----------------------------------------------------------- 
# UNIX Shell Script File
# Tested Operating System(s): RHEL 5,6
# Tested Run Level(s): 3, 5
# Shell Used: BASH shell
# Original Author(s): Roberto Padilla-Hernandez
# File Creation Date: 02/01/2015
# Date Last Modified:
#
# Version control: 1.00
#
# Support Team:
#
# Contributors: Floyd fayton
#
# ----------------------------------------------------------- 
# ------------- Program Description and Details ------------- 
# ----------------------------------------------------------- 
#
# Sets all environmental variables
#
# ----------------------------------------------------------- 

date
export PS4='$SECONDS ${0/\/nw.*\/nwps.*\/} + '
set -xa

# ############# ###############################
# SETUP NWPS SHELL VARIABLES
# #############################################
export DATA=$DATAROOT/p${model}_${WFO}_${envir}
mkdir $DATA
cd $DATA

####################################
# Specify NET and RUN Name and model
####################################
export NET=${model}
export OFS=ofs
export RUN=$(echo ${job}|awk -F"_" '{print $2}')

####################################
# SENDECF  - Flag Events on ECFLOW
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
####################################
export SENDCOM=${SENDCOM:-YES}
export SENDECF=${SENDECF:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDDBN_NTC=${SENDDBN_NTC:-YES}
####################################
# Specify Execution Areas
####################################
export HOMEnwps=${HOMEnwps:-${PACKAGEROOT}/${model}.${nwps_ver}}
export FIXnwps=${FIXnwps:-${HOMEnwps}/fix}
export EXECnwps=${EXECnwps:-${HOMEnwps}/exec}
export SORCnwps=${SORCnwps:-${HOMEnwps}/sorc}
export PARMnwps=${PARMnwps:-${HOMEnwps}/parm}
export USHnwps=${USHnwps:-${HOMEnwps}/ush}
export PMnwps=${PMnwps:-${USHnwps}/pm}
export BATHYdb=${BATHYdb:-${FIXnwps}/bathy_db}
export SHAPEFILEdb=${SHAPEFILEdb:-${FIXnwps}/shapefile_db}

# Set processing DIRs here
export ARCHdir=${ARCHdir:-${DATA}/archive}
export DATAdir=${DATAdir:-${DATA}/data}
export INPUTdir=${INPUTdir:-${DATA}/input}
export VARdir=${VARdir:-${DATA}/var}
export OUTPUTdir=${OUTPUTdir:-${DATA}/output}
export RUNdir=${RUNdir:-${DATA}/run}
export TMPdir=${TMPdir:-${DATA}/tmp}
export LOGdir=${LOGdir:-${DATA}/logs}
export GEN_NETCDF=${GEN_NETCDF:-FALSE}
export GEN_HDF5=${GEN_HDF5:-TRUE}
export PYTHON=python

# Set NWPS run conditions
export RETROSPECTIVE=${RETROSPECTIVE:-FALSE}
export DEBUGGING=${DEBUGGING:-TRUE}
export DEBUG_LEVEL=${DEBUG_LEVEL:-1}
export ISPRODUCTION=${ISPRODUCTION:-TRUE}
export SITETYPE=${SITETYPE:-EMC}
export MODELTYPE="SWAN"
export MODELCORE=`grep SWAN ${RUNdir}/info_to_nwps_coremodel.txt`

export pgmout=OUTPUT.$$
#setpdy.sh
. ./PDY

# Determine WFO's Region
export REGION=$( grep ${WFO,,} ${PARMnwps}/wfo.tbl | cut -c1-2 | tr '[:upper:]' '[:lower:]' )
echo ${REGION}

##############################################
# Define COM directory
##############################################
export COMIN=$(compath.py ${NET}/${nwps_ver}/${REGION}.${PDY}/${WFO})
export COMINm1=$(compath.py ${NET}/${nwps_ver}/${REGION}.${PDYm1}/${WFO})
export COMINm2=$(compath.py ${NET}/${nwps_ver}/${REGION}.${PDYm2}/${WFO})
export COMINm3=$(compath.py ${NET}/${nwps_ver}/${REGION}.${PDYm3}/${WFO})
export COMOUT=$(compath.py -o ${NET}/${nwps_ver})/${REGION}.${PDY}/${WFO}
export GESOUT=$(compath.py -o ${NET}/${nwps_ver})/${NET}.${PDY}/nwges
export GESIN=$(compath.py ${NET}/${nwps_ver}/${NET}.${PDY}/nwges)
export GESINm1=$(compath.py ${NET}/${nwps_ver}/${NET}.${PDYm1}/nwges)
export GESINm2=$(compath.py ${NET}/${nwps_ver}/${NET}.${PDYm2}/nwges)
export GESINm3=$(compath.py ${NET}/${nwps_ver}/${NET}.${PDYm3}/nwges)
export COMOUTwmo=$(compath.py -o ${NET}/${nwps_ver})/${REGION}.${PDY}/wmo
#--------------------------------------------------------------------------
export dcom_hist="$GESOUT/dcom_hist.txt"

# make sure NWPS COM directory exists
if [ "${SENDCOM}" = YES ]; then
    mkdir -p $COMOUT
fi

mkdir -p $COMIN $LOGdir $RUNdir $TMPdir $OUTPUTdir $ARCHdir $DATAdir $INPUTdir $VARdir

env

##############################################
# Execute the script
${HOMEnwps}/scripts/exnwps_post.sh
export err=$?; err_chk
##############################################

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg $jlogfile "$msg"

if [ -e $pgmout ]; then
    cat $pgmout
fi

cd $DATAROOT

TS=`date +%Y%m%d%H%S`

cp -rp $DATA ${model}_${WFO}_${envir}_${TS} #save working directory for developer

date
